version: '3.3'
networks:
  proxy:
    external: true
services:
  # Minecraft Fabric Server
  mc-fabric:
      image: itzg/minecraft-server
      container_name: mc_fabric_server
      ports:
        - 25565:25565
      environment:
        TYPE: "FABRIC"
        MOTD: "Fabric Minecraft Server"
        MEMORY: "4G"
        EULA: "TRUE"
        ENABLE_RCON: "true"
        RCON_PASSWORD: ${RCON_PASSWORD}
        RCON_PORT: 28016
        restart: always
      volumes:
      - /data/minecraft-fabric:/data
      restart: unless-stopped
      networks:
        - proxy

  # Minecraft Backup Service
  mc-backup:
    image: itzg/mc-backup
    container_name: mc_backup
    # This needs to be set because backups use hostnames
    hostname: minecraftbackup
    environment:
      BACKUP_METHOD: tar
      BACKUP_INTERVAL: "3h"
      PRUNE_BACKUPS_DAYS: 7
      INITIAL_DELAY: 120
      TAR_COMPRESS_METHOD: gzip
      ZSTD_PARAMETERS: "-3 --long=25 --single-thread"
      SRC_DIR: "/data/minecraft-fabric/world"
      DEST_DIR: "/data/minecraft-backups"
      BACKUP_NAME: tableflipper-server
      RCON_HOST: mc-fabric # change this to your Minecraft docker service name
      RCON_PASSWORD: ${RCON_PASSWORD}
      RCON_PORT: 28016
    volumes:
      - /data:/data
    restart: unless-stopped
    networks:
      - proxy

  # Traefik
  traefik:
    image: traefik:v2.9
    container_name: traefik
    hostname: traefik_host
    command:
      --api.insecure=true
      --providers.docker=true
      --providers.docker.exposedbydefault=false
      --entrypoints.http.address=:80
      --entrypoints.https.address=:443
      --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=http
      --certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      --certificatesresolvers.letsencrypt.acme.email=dominik.blatzheim@mailbox.org
      --certificatesresolvers.letsencrypt.acme.storage=acme.json
    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 8080:8080 # Web UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # let Traefik listen for Docker events
      - /data/traefik/acme.json:/acme.json
    restart: unless-stopped
    networks:
      - proxy

  # FoundryVTT services for Beaver
  foundry-beaver:
    image: felddy/foundryvtt:release
    container_name: foundry-beaver
    init: true
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - type: bind
        source: /home/dome/foundry-vtt-beaver
        target: /data
    environment:
      - FOUNDRY_PASSWORD=${FOUNDRY_PASSWORD}
      - FOUNDRY_USERNAME=${FOUNDRY_USERNAME}
      - FOUNDRY_ADMIN_KEY=${FOUNDRY_ADMIN_PASSWORD}
    labels:
      - "traefik.enable=true"
      # HTTP
      - "traefik.http.routers.foundryvtt-beaver.rule=Host(`foundry.beaver.pragmaticbeaver.eu`)"
      - "traefik.http.routers.foundryvtt-beaver.entrypoints=http"

      # HTTPS
      - "traefik.http.routers.foundryvtt-beaver-secure.rule=Host(`foundry.beaver.pragmaticbeaver.eu`)"
      - "traefik.http.routers.foundryvtt-beaver-secure.entrypoints=https"
      - "traefik.http.routers.foundryvtt-beaver-secure.tls=true"
      - "traefik.http.routers.foundryvtt-beaver-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.foundryvtt-beaver-secure.service=foundrybeaver"
      - "traefik.http.services.foundrybeaver.loadbalancer.server.port=30000" # FoundryVTT Port

      # redirect
      - "traefik.http.routers.foundryvtt-beaver.middlewares=foundryvtt-beaver-https-redirect"
      - "traefik.http.middlewares.foundryvtt-beaver-https-redirect.redirectscheme.scheme=https"
  
  # FoundryVTT services for WarHab
  foundry-warhab:
    image: felddy/foundryvtt:release
    container_name: foundry-warhab
    init: true
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - type: bind
        source: /home/kibin/foundry-vtt-warhab
        target: /data
      # - type: bind
      #   source: /home/warhab/foundry-vtt-warhab
      #   target: /data
    environment:
      - FOUNDRY_PASSWORD=${FOUNDRY_PASSWORD_WARHAB}
      - FOUNDRY_USERNAME=${FOUNDRY_USERNAME_WARHAB}
      - FOUNDRY_ADMIN_KEY=${FOUNDRY_ADMIN_PASSWORD_WARHAB}
    labels:
      - "traefik.enable=true"
      # HTTP
      - "traefik.http.routers.foundryvtt-warhab.rule=Host(`foundry.warhab.pragmaticbeaver.eu`)"
      - "traefik.http.routers.foundryvtt-warhab.entrypoints=http"

      # HTTPS
      - "traefik.http.routers.foundryvtt-warhab-secure.rule=Host(`foundry.warhab.pragmaticbeaver.eu`)"
      - "traefik.http.routers.foundryvtt-warhab-secure.entrypoints=https"
      - "traefik.http.routers.foundryvtt-warhab-secure.tls=true"
      - "traefik.http.routers.foundryvtt-warhab-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.foundryvtt-warhab-secure.service=foundrywarhab"
      - "traefik.http.services.foundrywarhab.loadbalancer.server.port=30000" # FoundryVTT Port

      # redirect
      - "traefik.http.routers.foundryvtt-warhab.middlewares=foundryvtt-warhab-https-redirect"
      - "traefik.http.middlewares.foundryvtt-warhab-https-redirect.redirectscheme.scheme=https"