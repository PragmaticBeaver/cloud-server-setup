services:
  # Minecraft Fabric Server
  mc-fabric:
      image: itzg/minecraft-server
      container_name: mc_fabric_server
      ports:
        - 25565:25565
      environment:
        TYPE: "FABRIC"
        MOTD: "Fabric Minecraft Server"
        MEMORY: "4G"
        EULA: "TRUE"
        ENABLE_RCON: "true"
        RCON_PASSWORD: ${RCON_PASSWORD}
        RCON_PORT: 28016
        restart: always
      volumes:
      - /data/minecraft-fabric:/data
      restart: unless-stopped

  # Minecraft Backup Service
  mc-backup:
    image: itzg/mc-backup
    container_name: mc_backup
    # This needs to be set because backups use hostnames
    hostname: minecraftbackup
    environment:
      BACKUP_METHOD: tar
      BACKUP_INTERVAL: "3h"
      PRUNE_BACKUPS_DAYS: 7
      INITIAL_DELAY: 120
      TAR_COMPRESS_METHOD: gzip
      ZSTD_PARAMETERS: "-3 --long=25 --single-thread"
      SRC_DIR: "/data/minecraft-fabric/world"
      DEST_DIR: "/data/minecraft-backups"
      BACKUP_NAME: tableflipper-server
      RCON_HOST: mc-fabric # change this to your Minecraft docker service name
      RCON_PASSWORD: ${RCON_PASSWORD}
      RCON_PORT: 28016
    volumes:
      - /data:/data
    restart: unless-stopped

  # Traefik
  # todo configure LetsEncrypt
  traefik:
    image: traefik:release
    container_name: traefik
    hostname: traefik_host
    command:
      --api.insecure=true
      --providers.docker
    ports:
      - 80:80 # HTTP
      - 443:443 # HTTPS
      - 8080:8080 # Web UI
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # let Traefik listen for Docker events
    restart: unless-stopped

  # FoundryVTT services for Beaver
  foundry-beaver:
    image: felddy/foundryvtt:release
    container_name: foundry_beaver
    hostname: foundry_host_beaver
    init: true
    volumes:
      - type: bind
        source: /data/foundry-vtt-beaver
        target: /data
      - /data/SSL:/ssl
    environment:
      - FOUNDRY_PASSWORD=${FOUNDRY_PASSWORD}
      - FOUNDRY_USERNAME=${FOUNDRY_USERNAME}
      - FOUNDRY_ADMIN_KEY=${FOUNDRY_ADMIN_PASSWORD}
      - FOUNDRY_SSL_CERT=${FOUNDRY_SSL_CERT}
      - FOUNDRY_SSL_KEY=${FOUNDRY_SSL_KEY}
    ports:
      - 30000:30000
    restart: unless-stopped

  # FoundryVTT services for WarHab & Kibin
  foundry-kibin:
    image: felddy/foundryvtt:release
    container_name: foundry_kibin
    hostname: foundry_host_kibin
    init: true
    volumes:
      - type: bind
        source: /data/foundry-vtt-kibin
        target: /data
      - /data/SSL:/ssl
    environment:
      - FOUNDRY_PASSWORD=${FOUNDRY_PASSWORD_KIBIN}
      - FOUNDRY_USERNAME=${FOUNDRY_USERNAME_KIBIN}
      - FOUNDRY_ADMIN_KEY=${FOUNDRY_ADMIN_PASSWORD_KIBIN}
      - FOUNDRY_SSL_CERT=${FOUNDRY_SSL_CERT}
      - FOUNDRY_SSL_KEY=${FOUNDRY_SSL_KEY}
    ports:
      - 30001:30000
    restart: unless-stopped
